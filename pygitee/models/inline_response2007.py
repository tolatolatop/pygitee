# coding: utf-8

"""
    Gitee OpenApi

    All api provided by Gitee  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2007(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'assignee': 'Assignee',
        'assignees_number': 'int',
        'assigner': 'Assigner',
        'blobs_url': 'str',
        'branches_url': 'str',
        'can_comment': 'bool',
        'collaborators_url': 'str',
        'comments_url': 'str',
        'commits_url': 'str',
        'contributors_url': 'str',
        'created_at': 'str',
        'default_branch': 'str',
        'description': 'str',
        'enterprise': 'Enterprise',
        'fork': 'bool',
        'forks_count': 'int',
        'forks_url': 'str',
        'full_name': 'str',
        'gvp': 'bool',
        'has_issues': 'bool',
        'has_page': 'bool',
        'has_wiki': 'bool',
        'homepage': 'str',
        'hooks_url': 'str',
        'html_url': 'str',
        'human_name': 'str',
        'id': 'int',
        'internal': 'str',
        'issue_comment': 'bool',
        'issue_comment_url': 'str',
        'issue_template_source': 'str',
        'issues_url': 'str',
        'keys_url': 'str',
        'labels_url': 'str',
        'language': 'str',
        'license': 'str',
        'members': 'object',
        'milestones_url': 'str',
        'name': 'str',
        'namespace': 'Namespace',
        'notifications_url': 'str',
        'open_issues_count': 'int',
        'outsourced': 'bool',
        'owner': 'Owner',
        'paas': 'str',
        'parent': 'Parent',
        'path': 'str',
        'permission': 'object',
        'private': 'bool',
        'programs': 'Programs',
        'project_creator': 'str',
        'project_labels': 'ProjectLabels',
        'public': 'bool',
        'pull_requests_enabled': 'bool',
        'pulls_url': 'str',
        'pushed_at': 'str',
        'recommend': 'bool',
        'relation': 'str',
        'releases_url': 'str',
        'ssh_url': 'str',
        'stared': 'bool',
        'stargazers_count': 'int',
        'stargazers_url': 'str',
        'status': 'str',
        'tags_url': 'str',
        'testers': 'Testers',
        'testers_number': 'int',
        'updated_at': 'str',
        'url': 'str',
        'watched': 'bool',
        'watchers_count': 'int'
    }

    attribute_map = {
        'assignee': 'assignee',
        'assignees_number': 'assignees_number',
        'assigner': 'assigner',
        'blobs_url': 'blobs_url',
        'branches_url': 'branches_url',
        'can_comment': 'can_comment',
        'collaborators_url': 'collaborators_url',
        'comments_url': 'comments_url',
        'commits_url': 'commits_url',
        'contributors_url': 'contributors_url',
        'created_at': 'created_at',
        'default_branch': 'default_branch',
        'description': 'description',
        'enterprise': 'enterprise',
        'fork': 'fork',
        'forks_count': 'forks_count',
        'forks_url': 'forks_url',
        'full_name': 'full_name',
        'gvp': 'gvp',
        'has_issues': 'has_issues',
        'has_page': 'has_page',
        'has_wiki': 'has_wiki',
        'homepage': 'homepage',
        'hooks_url': 'hooks_url',
        'html_url': 'html_url',
        'human_name': 'human_name',
        'id': 'id',
        'internal': 'internal',
        'issue_comment': 'issue_comment',
        'issue_comment_url': 'issue_comment_url',
        'issue_template_source': 'issue_template_source',
        'issues_url': 'issues_url',
        'keys_url': 'keys_url',
        'labels_url': 'labels_url',
        'language': 'language',
        'license': 'license',
        'members': 'members',
        'milestones_url': 'milestones_url',
        'name': 'name',
        'namespace': 'namespace',
        'notifications_url': 'notifications_url',
        'open_issues_count': 'open_issues_count',
        'outsourced': 'outsourced',
        'owner': 'owner',
        'paas': 'paas',
        'parent': 'parent',
        'path': 'path',
        'permission': 'permission',
        'private': 'private',
        'programs': 'programs',
        'project_creator': 'project_creator',
        'project_labels': 'project_labels',
        'public': 'public',
        'pull_requests_enabled': 'pull_requests_enabled',
        'pulls_url': 'pulls_url',
        'pushed_at': 'pushed_at',
        'recommend': 'recommend',
        'relation': 'relation',
        'releases_url': 'releases_url',
        'ssh_url': 'ssh_url',
        'stared': 'stared',
        'stargazers_count': 'stargazers_count',
        'stargazers_url': 'stargazers_url',
        'status': 'status',
        'tags_url': 'tags_url',
        'testers': 'testers',
        'testers_number': 'testers_number',
        'updated_at': 'updated_at',
        'url': 'url',
        'watched': 'watched',
        'watchers_count': 'watchers_count'
    }

    def __init__(self, assignee=None, assignees_number=None, assigner=None, blobs_url=None, branches_url=None, can_comment=None, collaborators_url=None, comments_url=None, commits_url=None, contributors_url=None, created_at=None, default_branch=None, description=None, enterprise=None, fork=None, forks_count=None, forks_url=None, full_name=None, gvp=None, has_issues=None, has_page=None, has_wiki=None, homepage=None, hooks_url=None, html_url=None, human_name=None, id=None, internal=None, issue_comment=None, issue_comment_url=None, issue_template_source=None, issues_url=None, keys_url=None, labels_url=None, language=None, license=None, members=None, milestones_url=None, name=None, namespace=None, notifications_url=None, open_issues_count=None, outsourced=None, owner=None, paas=None, parent=None, path=None, permission=None, private=None, programs=None, project_creator=None, project_labels=None, public=None, pull_requests_enabled=None, pulls_url=None, pushed_at=None, recommend=None, relation=None, releases_url=None, ssh_url=None, stared=None, stargazers_count=None, stargazers_url=None, status=None, tags_url=None, testers=None, testers_number=None, updated_at=None, url=None, watched=None, watchers_count=None):  # noqa: E501
        """InlineResponse2007 - a model defined in Swagger"""  # noqa: E501
        self._assignee = None
        self._assignees_number = None
        self._assigner = None
        self._blobs_url = None
        self._branches_url = None
        self._can_comment = None
        self._collaborators_url = None
        self._comments_url = None
        self._commits_url = None
        self._contributors_url = None
        self._created_at = None
        self._default_branch = None
        self._description = None
        self._enterprise = None
        self._fork = None
        self._forks_count = None
        self._forks_url = None
        self._full_name = None
        self._gvp = None
        self._has_issues = None
        self._has_page = None
        self._has_wiki = None
        self._homepage = None
        self._hooks_url = None
        self._html_url = None
        self._human_name = None
        self._id = None
        self._internal = None
        self._issue_comment = None
        self._issue_comment_url = None
        self._issue_template_source = None
        self._issues_url = None
        self._keys_url = None
        self._labels_url = None
        self._language = None
        self._license = None
        self._members = None
        self._milestones_url = None
        self._name = None
        self._namespace = None
        self._notifications_url = None
        self._open_issues_count = None
        self._outsourced = None
        self._owner = None
        self._paas = None
        self._parent = None
        self._path = None
        self._permission = None
        self._private = None
        self._programs = None
        self._project_creator = None
        self._project_labels = None
        self._public = None
        self._pull_requests_enabled = None
        self._pulls_url = None
        self._pushed_at = None
        self._recommend = None
        self._relation = None
        self._releases_url = None
        self._ssh_url = None
        self._stared = None
        self._stargazers_count = None
        self._stargazers_url = None
        self._status = None
        self._tags_url = None
        self._testers = None
        self._testers_number = None
        self._updated_at = None
        self._url = None
        self._watched = None
        self._watchers_count = None
        self.discriminator = None
        if assignee is not None:
            self.assignee = assignee
        if assignees_number is not None:
            self.assignees_number = assignees_number
        if assigner is not None:
            self.assigner = assigner
        if blobs_url is not None:
            self.blobs_url = blobs_url
        if branches_url is not None:
            self.branches_url = branches_url
        if can_comment is not None:
            self.can_comment = can_comment
        if collaborators_url is not None:
            self.collaborators_url = collaborators_url
        if comments_url is not None:
            self.comments_url = comments_url
        if commits_url is not None:
            self.commits_url = commits_url
        if contributors_url is not None:
            self.contributors_url = contributors_url
        if created_at is not None:
            self.created_at = created_at
        if default_branch is not None:
            self.default_branch = default_branch
        if description is not None:
            self.description = description
        if enterprise is not None:
            self.enterprise = enterprise
        if fork is not None:
            self.fork = fork
        if forks_count is not None:
            self.forks_count = forks_count
        if forks_url is not None:
            self.forks_url = forks_url
        if full_name is not None:
            self.full_name = full_name
        if gvp is not None:
            self.gvp = gvp
        if has_issues is not None:
            self.has_issues = has_issues
        if has_page is not None:
            self.has_page = has_page
        if has_wiki is not None:
            self.has_wiki = has_wiki
        if homepage is not None:
            self.homepage = homepage
        if hooks_url is not None:
            self.hooks_url = hooks_url
        if html_url is not None:
            self.html_url = html_url
        if human_name is not None:
            self.human_name = human_name
        if id is not None:
            self.id = id
        if internal is not None:
            self.internal = internal
        if issue_comment is not None:
            self.issue_comment = issue_comment
        if issue_comment_url is not None:
            self.issue_comment_url = issue_comment_url
        if issue_template_source is not None:
            self.issue_template_source = issue_template_source
        if issues_url is not None:
            self.issues_url = issues_url
        if keys_url is not None:
            self.keys_url = keys_url
        if labels_url is not None:
            self.labels_url = labels_url
        if language is not None:
            self.language = language
        if license is not None:
            self.license = license
        if members is not None:
            self.members = members
        if milestones_url is not None:
            self.milestones_url = milestones_url
        if name is not None:
            self.name = name
        if namespace is not None:
            self.namespace = namespace
        if notifications_url is not None:
            self.notifications_url = notifications_url
        if open_issues_count is not None:
            self.open_issues_count = open_issues_count
        if outsourced is not None:
            self.outsourced = outsourced
        if owner is not None:
            self.owner = owner
        if paas is not None:
            self.paas = paas
        if parent is not None:
            self.parent = parent
        if path is not None:
            self.path = path
        if permission is not None:
            self.permission = permission
        if private is not None:
            self.private = private
        if programs is not None:
            self.programs = programs
        if project_creator is not None:
            self.project_creator = project_creator
        if project_labels is not None:
            self.project_labels = project_labels
        if public is not None:
            self.public = public
        if pull_requests_enabled is not None:
            self.pull_requests_enabled = pull_requests_enabled
        if pulls_url is not None:
            self.pulls_url = pulls_url
        if pushed_at is not None:
            self.pushed_at = pushed_at
        if recommend is not None:
            self.recommend = recommend
        if relation is not None:
            self.relation = relation
        if releases_url is not None:
            self.releases_url = releases_url
        if ssh_url is not None:
            self.ssh_url = ssh_url
        if stared is not None:
            self.stared = stared
        if stargazers_count is not None:
            self.stargazers_count = stargazers_count
        if stargazers_url is not None:
            self.stargazers_url = stargazers_url
        if status is not None:
            self.status = status
        if tags_url is not None:
            self.tags_url = tags_url
        if testers is not None:
            self.testers = testers
        if testers_number is not None:
            self.testers_number = testers_number
        if updated_at is not None:
            self.updated_at = updated_at
        if url is not None:
            self.url = url
        if watched is not None:
            self.watched = watched
        if watchers_count is not None:
            self.watchers_count = watchers_count

    @property
    def assignee(self):
        """Gets the assignee of this InlineResponse2007.  # noqa: E501


        :return: The assignee of this InlineResponse2007.  # noqa: E501
        :rtype: Assignee
        """
        return self._assignee

    @assignee.setter
    def assignee(self, assignee):
        """Sets the assignee of this InlineResponse2007.


        :param assignee: The assignee of this InlineResponse2007.  # noqa: E501
        :type: Assignee
        """

        self._assignee = assignee

    @property
    def assignees_number(self):
        """Gets the assignees_number of this InlineResponse2007.  # noqa: E501


        :return: The assignees_number of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._assignees_number

    @assignees_number.setter
    def assignees_number(self, assignees_number):
        """Sets the assignees_number of this InlineResponse2007.


        :param assignees_number: The assignees_number of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._assignees_number = assignees_number

    @property
    def assigner(self):
        """Gets the assigner of this InlineResponse2007.  # noqa: E501


        :return: The assigner of this InlineResponse2007.  # noqa: E501
        :rtype: Assigner
        """
        return self._assigner

    @assigner.setter
    def assigner(self, assigner):
        """Sets the assigner of this InlineResponse2007.


        :param assigner: The assigner of this InlineResponse2007.  # noqa: E501
        :type: Assigner
        """

        self._assigner = assigner

    @property
    def blobs_url(self):
        """Gets the blobs_url of this InlineResponse2007.  # noqa: E501


        :return: The blobs_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._blobs_url

    @blobs_url.setter
    def blobs_url(self, blobs_url):
        """Sets the blobs_url of this InlineResponse2007.


        :param blobs_url: The blobs_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._blobs_url = blobs_url

    @property
    def branches_url(self):
        """Gets the branches_url of this InlineResponse2007.  # noqa: E501


        :return: The branches_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._branches_url

    @branches_url.setter
    def branches_url(self, branches_url):
        """Sets the branches_url of this InlineResponse2007.


        :param branches_url: The branches_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._branches_url = branches_url

    @property
    def can_comment(self):
        """Gets the can_comment of this InlineResponse2007.  # noqa: E501


        :return: The can_comment of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._can_comment

    @can_comment.setter
    def can_comment(self, can_comment):
        """Sets the can_comment of this InlineResponse2007.


        :param can_comment: The can_comment of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._can_comment = can_comment

    @property
    def collaborators_url(self):
        """Gets the collaborators_url of this InlineResponse2007.  # noqa: E501


        :return: The collaborators_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._collaborators_url

    @collaborators_url.setter
    def collaborators_url(self, collaborators_url):
        """Sets the collaborators_url of this InlineResponse2007.


        :param collaborators_url: The collaborators_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._collaborators_url = collaborators_url

    @property
    def comments_url(self):
        """Gets the comments_url of this InlineResponse2007.  # noqa: E501


        :return: The comments_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._comments_url

    @comments_url.setter
    def comments_url(self, comments_url):
        """Sets the comments_url of this InlineResponse2007.


        :param comments_url: The comments_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._comments_url = comments_url

    @property
    def commits_url(self):
        """Gets the commits_url of this InlineResponse2007.  # noqa: E501


        :return: The commits_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._commits_url

    @commits_url.setter
    def commits_url(self, commits_url):
        """Sets the commits_url of this InlineResponse2007.


        :param commits_url: The commits_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._commits_url = commits_url

    @property
    def contributors_url(self):
        """Gets the contributors_url of this InlineResponse2007.  # noqa: E501


        :return: The contributors_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._contributors_url

    @contributors_url.setter
    def contributors_url(self, contributors_url):
        """Sets the contributors_url of this InlineResponse2007.


        :param contributors_url: The contributors_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._contributors_url = contributors_url

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse2007.  # noqa: E501


        :return: The created_at of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse2007.


        :param created_at: The created_at of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def default_branch(self):
        """Gets the default_branch of this InlineResponse2007.  # noqa: E501


        :return: The default_branch of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._default_branch

    @default_branch.setter
    def default_branch(self, default_branch):
        """Sets the default_branch of this InlineResponse2007.


        :param default_branch: The default_branch of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._default_branch = default_branch

    @property
    def description(self):
        """Gets the description of this InlineResponse2007.  # noqa: E501


        :return: The description of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineResponse2007.


        :param description: The description of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def enterprise(self):
        """Gets the enterprise of this InlineResponse2007.  # noqa: E501


        :return: The enterprise of this InlineResponse2007.  # noqa: E501
        :rtype: Enterprise
        """
        return self._enterprise

    @enterprise.setter
    def enterprise(self, enterprise):
        """Sets the enterprise of this InlineResponse2007.


        :param enterprise: The enterprise of this InlineResponse2007.  # noqa: E501
        :type: Enterprise
        """

        self._enterprise = enterprise

    @property
    def fork(self):
        """Gets the fork of this InlineResponse2007.  # noqa: E501


        :return: The fork of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._fork

    @fork.setter
    def fork(self, fork):
        """Sets the fork of this InlineResponse2007.


        :param fork: The fork of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._fork = fork

    @property
    def forks_count(self):
        """Gets the forks_count of this InlineResponse2007.  # noqa: E501


        :return: The forks_count of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._forks_count

    @forks_count.setter
    def forks_count(self, forks_count):
        """Sets the forks_count of this InlineResponse2007.


        :param forks_count: The forks_count of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._forks_count = forks_count

    @property
    def forks_url(self):
        """Gets the forks_url of this InlineResponse2007.  # noqa: E501


        :return: The forks_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._forks_url

    @forks_url.setter
    def forks_url(self, forks_url):
        """Sets the forks_url of this InlineResponse2007.


        :param forks_url: The forks_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._forks_url = forks_url

    @property
    def full_name(self):
        """Gets the full_name of this InlineResponse2007.  # noqa: E501


        :return: The full_name of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this InlineResponse2007.


        :param full_name: The full_name of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._full_name = full_name

    @property
    def gvp(self):
        """Gets the gvp of this InlineResponse2007.  # noqa: E501


        :return: The gvp of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._gvp

    @gvp.setter
    def gvp(self, gvp):
        """Sets the gvp of this InlineResponse2007.


        :param gvp: The gvp of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._gvp = gvp

    @property
    def has_issues(self):
        """Gets the has_issues of this InlineResponse2007.  # noqa: E501


        :return: The has_issues of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._has_issues

    @has_issues.setter
    def has_issues(self, has_issues):
        """Sets the has_issues of this InlineResponse2007.


        :param has_issues: The has_issues of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._has_issues = has_issues

    @property
    def has_page(self):
        """Gets the has_page of this InlineResponse2007.  # noqa: E501


        :return: The has_page of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._has_page

    @has_page.setter
    def has_page(self, has_page):
        """Sets the has_page of this InlineResponse2007.


        :param has_page: The has_page of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._has_page = has_page

    @property
    def has_wiki(self):
        """Gets the has_wiki of this InlineResponse2007.  # noqa: E501


        :return: The has_wiki of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._has_wiki

    @has_wiki.setter
    def has_wiki(self, has_wiki):
        """Sets the has_wiki of this InlineResponse2007.


        :param has_wiki: The has_wiki of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._has_wiki = has_wiki

    @property
    def homepage(self):
        """Gets the homepage of this InlineResponse2007.  # noqa: E501


        :return: The homepage of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._homepage

    @homepage.setter
    def homepage(self, homepage):
        """Sets the homepage of this InlineResponse2007.


        :param homepage: The homepage of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._homepage = homepage

    @property
    def hooks_url(self):
        """Gets the hooks_url of this InlineResponse2007.  # noqa: E501


        :return: The hooks_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._hooks_url

    @hooks_url.setter
    def hooks_url(self, hooks_url):
        """Sets the hooks_url of this InlineResponse2007.


        :param hooks_url: The hooks_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._hooks_url = hooks_url

    @property
    def html_url(self):
        """Gets the html_url of this InlineResponse2007.  # noqa: E501


        :return: The html_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this InlineResponse2007.


        :param html_url: The html_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._html_url = html_url

    @property
    def human_name(self):
        """Gets the human_name of this InlineResponse2007.  # noqa: E501


        :return: The human_name of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._human_name

    @human_name.setter
    def human_name(self, human_name):
        """Sets the human_name of this InlineResponse2007.


        :param human_name: The human_name of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._human_name = human_name

    @property
    def id(self):
        """Gets the id of this InlineResponse2007.  # noqa: E501


        :return: The id of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2007.


        :param id: The id of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def internal(self):
        """Gets the internal of this InlineResponse2007.  # noqa: E501


        :return: The internal of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._internal

    @internal.setter
    def internal(self, internal):
        """Sets the internal of this InlineResponse2007.


        :param internal: The internal of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._internal = internal

    @property
    def issue_comment(self):
        """Gets the issue_comment of this InlineResponse2007.  # noqa: E501


        :return: The issue_comment of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._issue_comment

    @issue_comment.setter
    def issue_comment(self, issue_comment):
        """Sets the issue_comment of this InlineResponse2007.


        :param issue_comment: The issue_comment of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._issue_comment = issue_comment

    @property
    def issue_comment_url(self):
        """Gets the issue_comment_url of this InlineResponse2007.  # noqa: E501


        :return: The issue_comment_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._issue_comment_url

    @issue_comment_url.setter
    def issue_comment_url(self, issue_comment_url):
        """Sets the issue_comment_url of this InlineResponse2007.


        :param issue_comment_url: The issue_comment_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._issue_comment_url = issue_comment_url

    @property
    def issue_template_source(self):
        """Gets the issue_template_source of this InlineResponse2007.  # noqa: E501


        :return: The issue_template_source of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._issue_template_source

    @issue_template_source.setter
    def issue_template_source(self, issue_template_source):
        """Sets the issue_template_source of this InlineResponse2007.


        :param issue_template_source: The issue_template_source of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._issue_template_source = issue_template_source

    @property
    def issues_url(self):
        """Gets the issues_url of this InlineResponse2007.  # noqa: E501


        :return: The issues_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._issues_url

    @issues_url.setter
    def issues_url(self, issues_url):
        """Sets the issues_url of this InlineResponse2007.


        :param issues_url: The issues_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._issues_url = issues_url

    @property
    def keys_url(self):
        """Gets the keys_url of this InlineResponse2007.  # noqa: E501


        :return: The keys_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._keys_url

    @keys_url.setter
    def keys_url(self, keys_url):
        """Sets the keys_url of this InlineResponse2007.


        :param keys_url: The keys_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._keys_url = keys_url

    @property
    def labels_url(self):
        """Gets the labels_url of this InlineResponse2007.  # noqa: E501


        :return: The labels_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._labels_url

    @labels_url.setter
    def labels_url(self, labels_url):
        """Sets the labels_url of this InlineResponse2007.


        :param labels_url: The labels_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._labels_url = labels_url

    @property
    def language(self):
        """Gets the language of this InlineResponse2007.  # noqa: E501


        :return: The language of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this InlineResponse2007.


        :param language: The language of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._language = language

    @property
    def license(self):
        """Gets the license of this InlineResponse2007.  # noqa: E501


        :return: The license of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this InlineResponse2007.


        :param license: The license of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._license = license

    @property
    def members(self):
        """Gets the members of this InlineResponse2007.  # noqa: E501


        :return: The members of this InlineResponse2007.  # noqa: E501
        :rtype: object
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this InlineResponse2007.


        :param members: The members of this InlineResponse2007.  # noqa: E501
        :type: object
        """

        self._members = members

    @property
    def milestones_url(self):
        """Gets the milestones_url of this InlineResponse2007.  # noqa: E501


        :return: The milestones_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._milestones_url

    @milestones_url.setter
    def milestones_url(self, milestones_url):
        """Sets the milestones_url of this InlineResponse2007.


        :param milestones_url: The milestones_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._milestones_url = milestones_url

    @property
    def name(self):
        """Gets the name of this InlineResponse2007.  # noqa: E501


        :return: The name of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse2007.


        :param name: The name of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def namespace(self):
        """Gets the namespace of this InlineResponse2007.  # noqa: E501


        :return: The namespace of this InlineResponse2007.  # noqa: E501
        :rtype: Namespace
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this InlineResponse2007.


        :param namespace: The namespace of this InlineResponse2007.  # noqa: E501
        :type: Namespace
        """

        self._namespace = namespace

    @property
    def notifications_url(self):
        """Gets the notifications_url of this InlineResponse2007.  # noqa: E501


        :return: The notifications_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._notifications_url

    @notifications_url.setter
    def notifications_url(self, notifications_url):
        """Sets the notifications_url of this InlineResponse2007.


        :param notifications_url: The notifications_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._notifications_url = notifications_url

    @property
    def open_issues_count(self):
        """Gets the open_issues_count of this InlineResponse2007.  # noqa: E501


        :return: The open_issues_count of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._open_issues_count

    @open_issues_count.setter
    def open_issues_count(self, open_issues_count):
        """Sets the open_issues_count of this InlineResponse2007.


        :param open_issues_count: The open_issues_count of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._open_issues_count = open_issues_count

    @property
    def outsourced(self):
        """Gets the outsourced of this InlineResponse2007.  # noqa: E501


        :return: The outsourced of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._outsourced

    @outsourced.setter
    def outsourced(self, outsourced):
        """Sets the outsourced of this InlineResponse2007.


        :param outsourced: The outsourced of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._outsourced = outsourced

    @property
    def owner(self):
        """Gets the owner of this InlineResponse2007.  # noqa: E501


        :return: The owner of this InlineResponse2007.  # noqa: E501
        :rtype: Owner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this InlineResponse2007.


        :param owner: The owner of this InlineResponse2007.  # noqa: E501
        :type: Owner
        """

        self._owner = owner

    @property
    def paas(self):
        """Gets the paas of this InlineResponse2007.  # noqa: E501


        :return: The paas of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._paas

    @paas.setter
    def paas(self, paas):
        """Sets the paas of this InlineResponse2007.


        :param paas: The paas of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._paas = paas

    @property
    def parent(self):
        """Gets the parent of this InlineResponse2007.  # noqa: E501


        :return: The parent of this InlineResponse2007.  # noqa: E501
        :rtype: Parent
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this InlineResponse2007.


        :param parent: The parent of this InlineResponse2007.  # noqa: E501
        :type: Parent
        """

        self._parent = parent

    @property
    def path(self):
        """Gets the path of this InlineResponse2007.  # noqa: E501


        :return: The path of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this InlineResponse2007.


        :param path: The path of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def permission(self):
        """Gets the permission of this InlineResponse2007.  # noqa: E501


        :return: The permission of this InlineResponse2007.  # noqa: E501
        :rtype: object
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this InlineResponse2007.


        :param permission: The permission of this InlineResponse2007.  # noqa: E501
        :type: object
        """

        self._permission = permission

    @property
    def private(self):
        """Gets the private of this InlineResponse2007.  # noqa: E501


        :return: The private of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._private

    @private.setter
    def private(self, private):
        """Sets the private of this InlineResponse2007.


        :param private: The private of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._private = private

    @property
    def programs(self):
        """Gets the programs of this InlineResponse2007.  # noqa: E501


        :return: The programs of this InlineResponse2007.  # noqa: E501
        :rtype: Programs
        """
        return self._programs

    @programs.setter
    def programs(self, programs):
        """Sets the programs of this InlineResponse2007.


        :param programs: The programs of this InlineResponse2007.  # noqa: E501
        :type: Programs
        """

        self._programs = programs

    @property
    def project_creator(self):
        """Gets the project_creator of this InlineResponse2007.  # noqa: E501


        :return: The project_creator of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._project_creator

    @project_creator.setter
    def project_creator(self, project_creator):
        """Sets the project_creator of this InlineResponse2007.


        :param project_creator: The project_creator of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._project_creator = project_creator

    @property
    def project_labels(self):
        """Gets the project_labels of this InlineResponse2007.  # noqa: E501


        :return: The project_labels of this InlineResponse2007.  # noqa: E501
        :rtype: ProjectLabels
        """
        return self._project_labels

    @project_labels.setter
    def project_labels(self, project_labels):
        """Sets the project_labels of this InlineResponse2007.


        :param project_labels: The project_labels of this InlineResponse2007.  # noqa: E501
        :type: ProjectLabels
        """

        self._project_labels = project_labels

    @property
    def public(self):
        """Gets the public of this InlineResponse2007.  # noqa: E501


        :return: The public of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this InlineResponse2007.


        :param public: The public of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._public = public

    @property
    def pull_requests_enabled(self):
        """Gets the pull_requests_enabled of this InlineResponse2007.  # noqa: E501


        :return: The pull_requests_enabled of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._pull_requests_enabled

    @pull_requests_enabled.setter
    def pull_requests_enabled(self, pull_requests_enabled):
        """Sets the pull_requests_enabled of this InlineResponse2007.


        :param pull_requests_enabled: The pull_requests_enabled of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._pull_requests_enabled = pull_requests_enabled

    @property
    def pulls_url(self):
        """Gets the pulls_url of this InlineResponse2007.  # noqa: E501


        :return: The pulls_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._pulls_url

    @pulls_url.setter
    def pulls_url(self, pulls_url):
        """Sets the pulls_url of this InlineResponse2007.


        :param pulls_url: The pulls_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._pulls_url = pulls_url

    @property
    def pushed_at(self):
        """Gets the pushed_at of this InlineResponse2007.  # noqa: E501


        :return: The pushed_at of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._pushed_at

    @pushed_at.setter
    def pushed_at(self, pushed_at):
        """Sets the pushed_at of this InlineResponse2007.


        :param pushed_at: The pushed_at of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._pushed_at = pushed_at

    @property
    def recommend(self):
        """Gets the recommend of this InlineResponse2007.  # noqa: E501


        :return: The recommend of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._recommend

    @recommend.setter
    def recommend(self, recommend):
        """Sets the recommend of this InlineResponse2007.


        :param recommend: The recommend of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._recommend = recommend

    @property
    def relation(self):
        """Gets the relation of this InlineResponse2007.  # noqa: E501


        :return: The relation of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this InlineResponse2007.


        :param relation: The relation of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._relation = relation

    @property
    def releases_url(self):
        """Gets the releases_url of this InlineResponse2007.  # noqa: E501


        :return: The releases_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._releases_url

    @releases_url.setter
    def releases_url(self, releases_url):
        """Sets the releases_url of this InlineResponse2007.


        :param releases_url: The releases_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._releases_url = releases_url

    @property
    def ssh_url(self):
        """Gets the ssh_url of this InlineResponse2007.  # noqa: E501


        :return: The ssh_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._ssh_url

    @ssh_url.setter
    def ssh_url(self, ssh_url):
        """Sets the ssh_url of this InlineResponse2007.


        :param ssh_url: The ssh_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._ssh_url = ssh_url

    @property
    def stared(self):
        """Gets the stared of this InlineResponse2007.  # noqa: E501


        :return: The stared of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._stared

    @stared.setter
    def stared(self, stared):
        """Sets the stared of this InlineResponse2007.


        :param stared: The stared of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._stared = stared

    @property
    def stargazers_count(self):
        """Gets the stargazers_count of this InlineResponse2007.  # noqa: E501


        :return: The stargazers_count of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._stargazers_count

    @stargazers_count.setter
    def stargazers_count(self, stargazers_count):
        """Sets the stargazers_count of this InlineResponse2007.


        :param stargazers_count: The stargazers_count of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._stargazers_count = stargazers_count

    @property
    def stargazers_url(self):
        """Gets the stargazers_url of this InlineResponse2007.  # noqa: E501


        :return: The stargazers_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._stargazers_url

    @stargazers_url.setter
    def stargazers_url(self, stargazers_url):
        """Sets the stargazers_url of this InlineResponse2007.


        :param stargazers_url: The stargazers_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._stargazers_url = stargazers_url

    @property
    def status(self):
        """Gets the status of this InlineResponse2007.  # noqa: E501


        :return: The status of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse2007.


        :param status: The status of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def tags_url(self):
        """Gets the tags_url of this InlineResponse2007.  # noqa: E501


        :return: The tags_url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._tags_url

    @tags_url.setter
    def tags_url(self, tags_url):
        """Sets the tags_url of this InlineResponse2007.


        :param tags_url: The tags_url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._tags_url = tags_url

    @property
    def testers(self):
        """Gets the testers of this InlineResponse2007.  # noqa: E501


        :return: The testers of this InlineResponse2007.  # noqa: E501
        :rtype: Testers
        """
        return self._testers

    @testers.setter
    def testers(self, testers):
        """Sets the testers of this InlineResponse2007.


        :param testers: The testers of this InlineResponse2007.  # noqa: E501
        :type: Testers
        """

        self._testers = testers

    @property
    def testers_number(self):
        """Gets the testers_number of this InlineResponse2007.  # noqa: E501


        :return: The testers_number of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._testers_number

    @testers_number.setter
    def testers_number(self, testers_number):
        """Sets the testers_number of this InlineResponse2007.


        :param testers_number: The testers_number of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._testers_number = testers_number

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse2007.  # noqa: E501


        :return: The updated_at of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse2007.


        :param updated_at: The updated_at of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this InlineResponse2007.  # noqa: E501


        :return: The url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InlineResponse2007.


        :param url: The url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def watched(self):
        """Gets the watched of this InlineResponse2007.  # noqa: E501


        :return: The watched of this InlineResponse2007.  # noqa: E501
        :rtype: bool
        """
        return self._watched

    @watched.setter
    def watched(self, watched):
        """Sets the watched of this InlineResponse2007.


        :param watched: The watched of this InlineResponse2007.  # noqa: E501
        :type: bool
        """

        self._watched = watched

    @property
    def watchers_count(self):
        """Gets the watchers_count of this InlineResponse2007.  # noqa: E501


        :return: The watchers_count of this InlineResponse2007.  # noqa: E501
        :rtype: int
        """
        return self._watchers_count

    @watchers_count.setter
    def watchers_count(self, watchers_count):
        """Sets the watchers_count of this InlineResponse2007.


        :param watchers_count: The watchers_count of this InlineResponse2007.  # noqa: E501
        :type: int
        """

        self._watchers_count = watchers_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2007, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2007):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
