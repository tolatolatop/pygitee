# coding: utf-8

"""
    Gitee OpenApi

    All api provided by Gitee  # noqa: E501

    OpenAPI spec version: 1.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20044(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'links': 'str',
        'body': 'str',
        'comment_type': 'str',
        'commit_id': 'str',
        'created_at': 'str',
        'html_url': 'str',
        'id': 'str',
        'in_reply_to_id': 'str',
        'new_line': 'str',
        'original_commit_id': 'str',
        'original_position': 'str',
        'path': 'str',
        'position': 'str',
        'pull_request_url': 'str',
        'updated_at': 'str',
        'url': 'str',
        'user': 'str'
    }

    attribute_map = {
        'links': '_links',
        'body': 'body',
        'comment_type': 'comment_type',
        'commit_id': 'commit_id',
        'created_at': 'created_at',
        'html_url': 'html_url',
        'id': 'id',
        'in_reply_to_id': 'in_reply_to_id',
        'new_line': 'new_line',
        'original_commit_id': 'original_commit_id',
        'original_position': 'original_position',
        'path': 'path',
        'position': 'position',
        'pull_request_url': 'pull_request_url',
        'updated_at': 'updated_at',
        'url': 'url',
        'user': 'user'
    }

    def __init__(self, links=None, body=None, comment_type=None, commit_id=None, created_at=None, html_url=None, id=None, in_reply_to_id=None, new_line=None, original_commit_id=None, original_position=None, path=None, position=None, pull_request_url=None, updated_at=None, url=None, user=None):  # noqa: E501
        """InlineResponse20044 - a model defined in Swagger"""  # noqa: E501
        self._links = None
        self._body = None
        self._comment_type = None
        self._commit_id = None
        self._created_at = None
        self._html_url = None
        self._id = None
        self._in_reply_to_id = None
        self._new_line = None
        self._original_commit_id = None
        self._original_position = None
        self._path = None
        self._position = None
        self._pull_request_url = None
        self._updated_at = None
        self._url = None
        self._user = None
        self.discriminator = None
        if links is not None:
            self.links = links
        if body is not None:
            self.body = body
        if comment_type is not None:
            self.comment_type = comment_type
        if commit_id is not None:
            self.commit_id = commit_id
        if created_at is not None:
            self.created_at = created_at
        if html_url is not None:
            self.html_url = html_url
        if id is not None:
            self.id = id
        if in_reply_to_id is not None:
            self.in_reply_to_id = in_reply_to_id
        if new_line is not None:
            self.new_line = new_line
        if original_commit_id is not None:
            self.original_commit_id = original_commit_id
        if original_position is not None:
            self.original_position = original_position
        if path is not None:
            self.path = path
        if position is not None:
            self.position = position
        if pull_request_url is not None:
            self.pull_request_url = pull_request_url
        if updated_at is not None:
            self.updated_at = updated_at
        if url is not None:
            self.url = url
        if user is not None:
            self.user = user

    @property
    def links(self):
        """Gets the links of this InlineResponse20044.  # noqa: E501


        :return: The links of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InlineResponse20044.


        :param links: The links of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._links = links

    @property
    def body(self):
        """Gets the body of this InlineResponse20044.  # noqa: E501


        :return: The body of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this InlineResponse20044.


        :param body: The body of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._body = body

    @property
    def comment_type(self):
        """Gets the comment_type of this InlineResponse20044.  # noqa: E501


        :return: The comment_type of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._comment_type

    @comment_type.setter
    def comment_type(self, comment_type):
        """Sets the comment_type of this InlineResponse20044.


        :param comment_type: The comment_type of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._comment_type = comment_type

    @property
    def commit_id(self):
        """Gets the commit_id of this InlineResponse20044.  # noqa: E501


        :return: The commit_id of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this InlineResponse20044.


        :param commit_id: The commit_id of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._commit_id = commit_id

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse20044.  # noqa: E501


        :return: The created_at of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse20044.


        :param created_at: The created_at of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def html_url(self):
        """Gets the html_url of this InlineResponse20044.  # noqa: E501


        :return: The html_url of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this InlineResponse20044.


        :param html_url: The html_url of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._html_url = html_url

    @property
    def id(self):
        """Gets the id of this InlineResponse20044.  # noqa: E501


        :return: The id of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20044.


        :param id: The id of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def in_reply_to_id(self):
        """Gets the in_reply_to_id of this InlineResponse20044.  # noqa: E501


        :return: The in_reply_to_id of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._in_reply_to_id

    @in_reply_to_id.setter
    def in_reply_to_id(self, in_reply_to_id):
        """Sets the in_reply_to_id of this InlineResponse20044.


        :param in_reply_to_id: The in_reply_to_id of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._in_reply_to_id = in_reply_to_id

    @property
    def new_line(self):
        """Gets the new_line of this InlineResponse20044.  # noqa: E501


        :return: The new_line of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._new_line

    @new_line.setter
    def new_line(self, new_line):
        """Sets the new_line of this InlineResponse20044.


        :param new_line: The new_line of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._new_line = new_line

    @property
    def original_commit_id(self):
        """Gets the original_commit_id of this InlineResponse20044.  # noqa: E501


        :return: The original_commit_id of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._original_commit_id

    @original_commit_id.setter
    def original_commit_id(self, original_commit_id):
        """Sets the original_commit_id of this InlineResponse20044.


        :param original_commit_id: The original_commit_id of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._original_commit_id = original_commit_id

    @property
    def original_position(self):
        """Gets the original_position of this InlineResponse20044.  # noqa: E501


        :return: The original_position of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._original_position

    @original_position.setter
    def original_position(self, original_position):
        """Sets the original_position of this InlineResponse20044.


        :param original_position: The original_position of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._original_position = original_position

    @property
    def path(self):
        """Gets the path of this InlineResponse20044.  # noqa: E501


        :return: The path of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this InlineResponse20044.


        :param path: The path of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def position(self):
        """Gets the position of this InlineResponse20044.  # noqa: E501


        :return: The position of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this InlineResponse20044.


        :param position: The position of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def pull_request_url(self):
        """Gets the pull_request_url of this InlineResponse20044.  # noqa: E501


        :return: The pull_request_url of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._pull_request_url

    @pull_request_url.setter
    def pull_request_url(self, pull_request_url):
        """Sets the pull_request_url of this InlineResponse20044.


        :param pull_request_url: The pull_request_url of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._pull_request_url = pull_request_url

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse20044.  # noqa: E501


        :return: The updated_at of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse20044.


        :param updated_at: The updated_at of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this InlineResponse20044.  # noqa: E501


        :return: The url of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InlineResponse20044.


        :param url: The url of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def user(self):
        """Gets the user of this InlineResponse20044.  # noqa: E501


        :return: The user of this InlineResponse20044.  # noqa: E501
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this InlineResponse20044.


        :param user: The user of this InlineResponse20044.  # noqa: E501
        :type: str
        """

        self._user = user

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20044, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20044):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
