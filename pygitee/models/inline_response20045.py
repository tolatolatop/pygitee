# coding: utf-8

"""
    Gitee OpenApi

    All api provided by Gitee  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20045(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'assets': 'str',
        'author': 'str',
        'body': 'str',
        'created_at': 'str',
        'id': 'int',
        'name': 'str',
        'prerelease': 'str',
        'tag_name': 'str',
        'target_commitish': 'str'
    }

    attribute_map = {
        'assets': 'assets',
        'author': 'author',
        'body': 'body',
        'created_at': 'created_at',
        'id': 'id',
        'name': 'name',
        'prerelease': 'prerelease',
        'tag_name': 'tag_name',
        'target_commitish': 'target_commitish'
    }

    def __init__(self, assets=None, author=None, body=None, created_at=None, id=None, name=None, prerelease=None, tag_name=None, target_commitish=None):  # noqa: E501
        """InlineResponse20045 - a model defined in Swagger"""  # noqa: E501
        self._assets = None
        self._author = None
        self._body = None
        self._created_at = None
        self._id = None
        self._name = None
        self._prerelease = None
        self._tag_name = None
        self._target_commitish = None
        self.discriminator = None
        if assets is not None:
            self.assets = assets
        if author is not None:
            self.author = author
        if body is not None:
            self.body = body
        if created_at is not None:
            self.created_at = created_at
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if prerelease is not None:
            self.prerelease = prerelease
        if tag_name is not None:
            self.tag_name = tag_name
        if target_commitish is not None:
            self.target_commitish = target_commitish

    @property
    def assets(self):
        """Gets the assets of this InlineResponse20045.  # noqa: E501


        :return: The assets of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._assets

    @assets.setter
    def assets(self, assets):
        """Sets the assets of this InlineResponse20045.


        :param assets: The assets of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._assets = assets

    @property
    def author(self):
        """Gets the author of this InlineResponse20045.  # noqa: E501


        :return: The author of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this InlineResponse20045.


        :param author: The author of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._author = author

    @property
    def body(self):
        """Gets the body of this InlineResponse20045.  # noqa: E501


        :return: The body of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this InlineResponse20045.


        :param body: The body of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._body = body

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse20045.  # noqa: E501


        :return: The created_at of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse20045.


        :param created_at: The created_at of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this InlineResponse20045.  # noqa: E501


        :return: The id of this InlineResponse20045.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20045.


        :param id: The id of this InlineResponse20045.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this InlineResponse20045.  # noqa: E501


        :return: The name of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20045.


        :param name: The name of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def prerelease(self):
        """Gets the prerelease of this InlineResponse20045.  # noqa: E501


        :return: The prerelease of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._prerelease

    @prerelease.setter
    def prerelease(self, prerelease):
        """Sets the prerelease of this InlineResponse20045.


        :param prerelease: The prerelease of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._prerelease = prerelease

    @property
    def tag_name(self):
        """Gets the tag_name of this InlineResponse20045.  # noqa: E501


        :return: The tag_name of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """Sets the tag_name of this InlineResponse20045.


        :param tag_name: The tag_name of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._tag_name = tag_name

    @property
    def target_commitish(self):
        """Gets the target_commitish of this InlineResponse20045.  # noqa: E501


        :return: The target_commitish of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._target_commitish

    @target_commitish.setter
    def target_commitish(self, target_commitish):
        """Sets the target_commitish of this InlineResponse20045.


        :param target_commitish: The target_commitish of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._target_commitish = target_commitish

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20045, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20045):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
